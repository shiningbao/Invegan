<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
	xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	<context:component-scan
		base-package="kr.co.invegan" />


	<!-- datasource -->
	<!-- url, username, password는 바뀔 수 있으니 항상 확인할것 -->
	<!-- DB의 종류가 바뀌면 driverClassName, url도 바뀌게 된다 -->
	<beans:bean name="datasource"
		class="org.apache.commons.dbcp.BasicDataSource">
		<beans:property name="driverClassName"
			value="org.mariadb.jdbc.Driver" />
		<beans:property name="url"
			value="jdbc:mariadb://localhost:3306/invegan" />

		<beans:property name="username" value="web_user" />
		<beans:property name="password" value="0000" />
	</beans:bean>


	<!-- mapper location -->
	<!-- mapper의 위치 꼭 확인 할 것 -->
	<beans:bean id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- DB접속에 필요한 데이터소스 지정 -->
		<beans:property name="dataSource" ref="datasource" />
		<!-- 쿼리문 xml위치 지정 -->
		<beans:property name="mapperLocations"
			value="classpath:kr/co/invegan/**/dao/*.xml" />
	</beans:bean>



	<!-- mybatis package area -->
	<!-- dao 패키지 경로 확인 -->
	<mybatis-spring:scan base-package="kr.co.invegan" />

	<!-- navermail설정 -->
	<beans:bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<beans:property name="host" value="smtp.naver.com" /> <!-- 메일서버 호스트 -->
		<!-- <beans:property name="port" value="587" /> --> <!-- 메일서버 포트번호 : 네이버 설정에 포트가 587로 되어있어서 587로하면 SSL오류가 뜬다. 그러니 465로 설정해주자 -->
		<beans:property name="port" value="465" /> <!-- 메일서버 포트번호 -->
		<beans:property name="username" value="rlaalswll25" /> <!-- 자신의 이메일 아이디? 메일주소? -->
		<beans:property name="password" value="y046121@" /> <!-- 자신의 비밀번호 -->
		<!-- 보안연결 SSL과 관련된 설정 -->
		<beans:property name="javaMailProperties">
			<beans:props>
				<beans:prop key="mail.smtp.auth">true</beans:prop>
				<beans:prop key="mail.smtp.starttls.enable">true</beans:prop>
				<beans:prop key="mail.smtps.checkserveridentity">true</beans:prop>
				<beans:prop key="mail.transport.protocol">smtp</beans:prop>
				<beans:prop key="mail.smtps.ssl.trust">*</beans:prop>
				<beans:prop key="mail.debug">true</beans:prop>
				<beans:prop key="mail.smtp.socketFactory.class">javax.net.ssl.SSLSocketFactory
				</beans:prop>
			</beans:props>
		</beans:property>
	</beans:bean>


</beans:beans>
